@model IEnumerable<IdentityManager.Models.Page>

        @{
            ViewData["Title"] = "Índice";
        }

        <h1>Índice</h1>

        <p>
            <a asp-action="Create">Crear</a>
        </p>
        <table class="table sorting" id="pages">
            <thead class="home">
                <tr>

                    <th>
                        Título
                    </th>
                    <th>
                        Etiqueta
                    </th>

                    <th></th>
                </tr>
            </thead>
            <tbody>
                @foreach (var item in Model)
                {
                    <tr id="id_@item.Id" class="@item.Slug">

                        <td>
                            @item.Title
                        </td>
                        <td>
                            @item.Slug
                        </td>

                        <td>
                            <a asp-action="Edit" asp-route-id="@item.Id">Editar</a> |
                            <a asp-action="Details" asp-route-id="@item.Id">Detalles</a> |
                            @if (item.Slug != "home")
                            {
                                <a class="confirmDeletion" asp-action="Delete" asp-route-id="@item.Id">Borrar</a>
                            }


                        </td>
                    </tr>
                }
            </tbody>
        </table>
        @section Scripts {
            <script>
                $("table#pages tbody").sortable({
                    items: "tr:not(.home)",
                    placeholder: "ui-state-highlight",
                    update: function () {
                        let ids = $("table#pages tbody").sortable("serialize");
                        let url = "/admin/pages/reorder";

                        $.post(url, ids, function () { });

                    }
                })

            </script>
        }
